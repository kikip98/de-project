CREATE SCHEMA IF NOT EXISTS airline_postgres_schema;

CREATE TABLE IF NOT EXISTS airline_postgres_schema.twitter_users(
"user_id" varchar PRIMARY KEY,
"user_username" varchar,
"user_name" varchar,
"user_created_at" varchar,
"user_verified" boolean,
"user_nb_following" int,
"user_nb_followers" int,
"user_nb_tweets" int,
"user_nb_listed" int
);  

CREATE TABLE IF NOT EXISTS airline_postgres_schema.twitter_tweets(
"tweet_id" varchar PRIMARY KEY,
"user_id" varchar,
"airline" varchar,
"tweet_text" varchar,
"tweet_nb_retweets" int,
"tweet_nb_likes" int,
"tweet_nb_replies" int,
"tweet_created_at" varchar
);

ALTER TABLE airline_postgres_schema.twitter_tweets ADD FOREIGN KEY (user_id) REFERENCES airline_postgres_schema.twitter_users (user_id);


CREATE TABLE IF NOT EXISTS airline_postgres_schema.skytrax_reviews(
"review_id"  int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
"airline" varchar,
"overall_rating" int,
"review_title" varchar unique,
"review_author" varchar,
"review_sentiment" varchar,
"review_date_published" varchar,
"aircraft" varchar,
"traveller_type" varchar,
"cabin_flown" varchar,
"route" varchar,
"date_flown" varchar,
"value_for_money" int,
"inflight_entertainment" int,
"ground_service" int,
"seat_comfort" int,
"food_and_beverages" int,
"cabin_staff_service" int,
"wifi_and_connectivity" int,
"recommendation" varchar
);  